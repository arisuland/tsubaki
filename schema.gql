# â˜” Arisu: Translation made with simplicity, yet robust.
# Copyright (C) 2020-2021 Noelware
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# Represents all the queries you can create using the GraphQL endpoint.
# Most of the queries do not require authentication.
type Query {
    # A test query to see if the connection is working.
    hello: String!

    # Retrieve a user from the database
    #
    # @param id ~ The user's ID to retrieve from
    # @return [User?] ~ Returns the user's metadata excluding
    # masked information (password, email) or `null` if nothing
    # was found.
    user(id: String!): User
}

# Mutations are a way to modify any Tsubaki object, but most mutations require
# authentication. Read more about authentication on our documentation:
# https://docs.arisu.land/graphql#authentication
type Mutation {
    # Creates a new user and returns a [User] object.
    #
    # @param email ~ The email to register the user as
    # @param password ~ The password to use when registering
    # @param username ~ The unique username
    # @returns [User?] ~ Returns a new [User] object or `nil` if any
    # errors occur.
    createUser(email: String!, password: String!, username: String!): User
}

# Represents a user account.
type User {
    # The user's description that is embedded on the site. Tells a bit
    # about themself.
    description: String

    # Returns a DateTime on when the user has updated their account.
    updatedAt:   String!

    # Returns a DateTime on when the user has created their account.
    createdAt:   String!

    # Returns a list of projects created by the user.
    projects:    [Project!]!

    # The user's unique username.
    username:    String!

    # If this user has been disabled by a moderator, administrator,
    # or they disabled it on their own. You can check for the last one
    # with the UserFlags.DISABLED flag in User.flags
    disabled:    Boolean!

    # Returns the flags of a User, this can represent their permissions
    # globally from Arisu.
    flags:       Int!

    # The user's name that is embedded on the site.
    name:        String

    # Snowflake of when this User was generated in.
    id:          String!
}

# Represents a user or organization project.
type Project {
    # The project's description that is embedded on the site.
    description: String

    # Returns a ISO-8601 formatted date on when the user has updated their account.
    updatedAt:   String!

    # Returns a ISO-8601 formatted date on when the user has created their account.
    createdAt:   String!

    # The owner of this project.
    owner:       User!

    # Returns the flags of a Project, this can represent their permissions
    # globally from Arisu.
    flags:       Int!

    # The name of the project.
    name:        String!

    # Snowflake of when this User was generated in.
    id:          String!
}
